(()=>{"use strict";class t{static allprojects=[];constructor(e,o){this.name=e,this.todos=o,t.allprojects.push(this)}static getProjectsFromLocalStorage(){t.allprojects=JSON.parse(localStorage.getItem("items")||"[]")}static findProject(e){return t.allprojects.find((t=>t.name==e))}getName(){return this.name}setName(t){this.name=t}getTodos(){return this.todos}addTodo(t){this.todos.push(t)}}class e{static Alltodos=[];constructor(t){this.name=t,e.Alltodos.push(this)}static getTasksFromLocalStorage(){0!=t.allprojects.length&&null!=t.allprojects&&t.allprojects.forEach((t=>{0!=t.todos.length&&t.todos.forEach((t=>{e.Alltodos.push(t)}))}))}setName(t){this.name=t}getName(){return this.name}static findtodo(t){return e.Alltodos.find((e=>e.name==t))}}let o;function n(){localStorage.setItem("items",JSON.stringify(t.allprojects))}function c(){const t=document.querySelector("#add-task-div-button");document.querySelector(".task-buttons").style.display="none",t.style.display="block"}function s(t){const e=document.querySelector(".tasks");e.innerHTML=`<h2>${t.name}</h2>`,t.todos.forEach((t=>{!function(t,e){const o=document.createElement("div");o.classList.add("task"),o.innerHTML=`<span class="custom-check"></span><p class="taskname">${t.name}</p></div>`,e.appendChild(o)}(t,e)}))}function r(){document.querySelector("div.project").innerHTML="<li><h2>Projects</h2></li>",t.allprojects.forEach((t=>{!function(t){const e=document.querySelector("div.project"),o=document.createElement("div");o.classList.add("project-header-div"),o.innerHTML=`<li class="project-header">${t.name}</li>\n    <button class="btn-delete-project"><i class="fa-solid fa-trash"></i></button>`,e.appendChild(o)}(t)}))}t.getProjectsFromLocalStorage(),e.getTasksFromLocalStorage(),0==t.allprojects.length?function(){let e=new t("default",[]);o=e}():o=t.allprojects[0],r(),s(o),document.querySelector("#add-project").addEventListener("click",(function(e){e.preventDefault();const c=document.querySelector("#add-project-input").value;if(null==c||""==c)return;const a=new t(c,[]);n(),r(),o=a,s(a),document.querySelector("#add-project-form").reset()})),function(){const t=document.querySelector("#add-task-div-button");t.addEventListener("click",(function(){document.querySelector(".task-buttons").style.display="block",t.style.display="none"}))}(),document.querySelector("#add-task").addEventListener("click",(function(t){t.preventDefault();const r=document.querySelector("#add-task-input").value;if(""==r||null==r)return;const a=new e(r);o.todos.push(a),s(o),n(),document.querySelector("#add-task-form").reset(),c()})),document.querySelector("#cancel").addEventListener("click",c),document.querySelector("div.project").addEventListener("click",(function(e){if("li"==e.target.tagName.toLowerCase()){const n=e.target.textContent,c=t.findProject(n);null!=c&&(o=c,s(c))}})),document.querySelector("div.project").addEventListener("click",(function(e){if("i"==e.target.tagName.toLowerCase()){const c=e.target.parentNode.parentNode.textContent.toString().trim();let a=t.findProject(c);const l=t.allprojects.indexOf(a);if(0==l)return;t.allprojects.splice(l,1),o==a&&(o=t.allprojects[0]),a=null,n(),r(),s(o)}})),document.querySelector(".tasks").addEventListener("click",(function(t){if("span"==t.target.tagName.toLowerCase()){const c=t.target.parentNode.textContent;e.findtodo(c);const r=o,a=r.todos.indexOf(r);r.todos.splice(a,1),s(r),n()}}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,